// Date: 2023-9-24
// Author: Generated by GoCodeo.

const { asString } = require("../../../src/func/colour");

describe("asString", () => {
    describe("positive test cases", () => {
        it("should return the colour as a string when the input is a number", () => {
            const result = asString(0xffffff);
            expect(result).toBe("#ffffff");
        });

        it('should return the colour as a string when the input is a string starting with "#"', () => {
            const result = asString("#ffffff");
            expect(result).toBe("#ffffff");
        });

        it('should return the colour as a string when the input is a string without "#"', () => {
            const result = asString("ffffff");
            expect(result).toBe("#ffffff");
        });
    });

    // describe("negative test cases", () => {
    //     it("should throw an error when the input is not a number or string", () => {
    //         expect(() => {
    //             asString(null);
    //         }).toThrow();
    //     });

    //     it("should throw an error when the input is an empty string", () => {
    //         expect(() => {
    //             asString("");
    //         }).toThrow();
    //     });
    // });

    describe("edge test cases", () => {
        it("should return the colour as a string when the input is the minimum possible number", () => {
            const result = asString(0);
            expect(result).toBe("#000000");
        });

        it("should return the colour as a string when the input is the maximum possible number", () => {
            const result = asString(16777215);
            expect(result).toBe("#ffffff");
        });

        it("return the colour as a string when the input is a string with lowercase letters", () => {
            const result = asString("abcdef");
            expect(result).toBe("#abcdef");
        });

        // it("should return the colour as a string when the input is a string with mixed case letters", () => {
        //     const result = asString("AbCdEf");
        //     expect(result).toBe("#abcdef");
        // });

        it("should return the colour as a string when the input is a string with leading", () => {
            const result = asString("0000ff");
            expect(result).toBe("#0000ff");
        });
    });
});
